# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE when there is a push to the "main" branch.
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Create and configure a Workload Identity Provider for GitHub (https://github.com/google-github-actions/auth#setting-up-workload-identity-federation)
#
# 3. Change the values for the GAR_LOCATION, GKE_ZONE, GKE_CLUSTER, IMAGE, REPOSITORY and DEPLOYMENT_NAME environment variables (below).
#
# For more support on how to run the workflow, please visit https://github.com/google-github-actions/setup-gcloud/tree/master/example-workflows/gke-kustomize

name: Build and Deploy

on:
  push:
    branches: [ "main" ]

env:
  PROJECT_ID: ${{ secrets.PROJECT_ID}}
  SERVICE_ACCOUNT_KEY: ${{ secrets.SERVICE_ACCOUNT_KEY }}
  GAR_LOCATION: us-central1 # TODO: update region of the Artifact Registry
  SERVICE: ${{ vars.SERVICE_NAME }}   # TODO: update  both Artifact Registry name and cloud run service
  IMAGE: ${{ vars.SERVICE_NAME }} 
  REGION: us-central1 # TODO: update Cloud Run service region
  GIT_TAG: v0.1.0

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: abtrac

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: google-github-actions/setup-gcloud@v0
        with:
          service_account_key: ${{ env.SERVICE_ACCOUNT_KEY }}
          project_id: ${{ env.PROJECT_ID }}
          export_default_credentials: true
      
      - name: Artifactry Auth
        run: |-
          gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev
    
      - name: AppSettings Variable Substitution
        uses: microsoft/variable-substitution@v1
        with:
            files: '**/appsettings.json'
        env:
            ChatbotMongoDatabaseSettings.ConnectionString: ${{vars.MONGO_CONNECTIONSTRING}}
            ConnectionStrings.SQLConnectionString: ${{vars.SQL_CONNECTIONSTRING}}
            ModelServer: ${{ vars.MODEL_SERVER }}
            AllowedHost: ${{vars.ALLOW_HOST}}
            X-API-KEY: ${{secrets.TEST_API_KEY}}
            
      - name: Build and Push Container
        run: |-
          docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{env.IMAGE}}:${{ env.GIT_TAG }}" .
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{env.IMAGE}}:${{ env.GIT_TAG  }}"
      
      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          # NOTE: If using a pre-built image, update the image name here
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{env.IMAGE}}:${{ env.GIT_TAG }}

      # If required, use the Cloud Run url output in later steps
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}

   
